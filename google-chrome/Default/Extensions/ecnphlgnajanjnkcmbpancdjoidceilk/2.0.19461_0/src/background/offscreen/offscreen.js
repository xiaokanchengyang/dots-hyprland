function f(o){return new Promise(e=>{window.setTimeout(e,o)})}chrome.runtime.onConnectExternal.addListener(o=>{o.name==="download"&&o.onMessage.addListener(e=>{switch(console.debug("[downloader] onMessage",e),e.type){case"start":h(o,e.url,e.referrer);break;default:console.log("[downloader] received unknown message type",e)}})});function h(o,e,a){let n,r;o.onDisconnect.addListener(d),l();async function l(){for(let s=1;s<=3;s++){n=new AbortController,console.log(`[downloader] starting download attempt ${s}`,{url:e});try{const t=await fetch(e,{method:"GET",signal:n.signal,headers:b(),credentials:"include",redirect:"follow",referrer:a||void 0,mode:"cors"});if(!t.ok)if(s!==3&&t.status===403){await f(2e3);continue}else{c({type:"error",status:t.status});break}c({type:"started",headers:Object.fromEntries(t.headers.entries())});const u=await p(t,w=>{c({type:"progress",bytes:w.byteLength})}).blob();r=URL.createObjectURL(u),c({type:"finished",url:r}),console.log("[downloader] success",{url:e});break}catch(t){if(t instanceof Error&&t.message==="AbortError"){console.log("[downloader] aborted",{url:e});break}console.error("[downloader] error, aborting",{url:e,error:t}),n==null||n.abort(),s!==3?await f(1e3):c({type:"error",error:t.message})}}}function d(){console.log("[downloader] cleanup",{url:e}),n==null||n.abort(),r&&(URL.revokeObjectURL(r),r=void 0)}function b(){const i={},s=e.indexOf("&kami_gdrive_auth");if(s!==-1){const t=e.slice(s+18);i.Authorization=`Bearer ${t}`}return a&&(i["Kami-Referer"]=a),i}function c(i){o.postMessage(i)}}function p(o,e){const{body:a}=o;if(!a)throw new Error("no response body");const n=a.getReader();return new Response(new ReadableStream({async start(r){for(;;){const{done:l,value:d}=await n.read();if(l){r.close();break}else d&&(r.enqueue(d),e(d))}}}))}
