import{M as l,R as u,aj as d,_ as f}from"./SHnOzo4l.js";import{r,o as g}from"./BjgJiouD.js";import{c as h}from"./uDekdLYy.js";function p(t){const e=t.url||t.pendingUrl;return!e||e.startsWith("https://chrome.google.com/webstore")?!1:/^(http:|https:)/.test(e)}async function m(){const t=await chrome.windows.getAll({populate:!0});for(const e of t)for(const s of e.tabs||[])p(s)&&w(s)}async function w(t,e){if(!t.id)return;const s=e?{frameIds:[e],tabId:t.id}:{tabId:t.id,allFrames:!0},o=chrome.runtime.getManifest(),c=o.content_scripts[0].js,i=o.content_scripts[0].css;try{await chrome.scripting.executeScript({files:c,target:s}),await chrome.scripting.insertCSS({files:i,target:s})}catch(n){n instanceof Error&&!n.message.includes("Frame with ID")&&r(`Failed to inject content script: ${n.message}`)}}async function y(t){if(t.id)try{await chrome.tabs.sendMessage(t.id,{message:{name:l.CheckContentScriptActive}})}catch(e){if(e instanceof Error&&e.message.includes("Could not establish connection")){m(),r(`Content script was not active: ${e.message}`);return}throw e}}const a={user:null,edgeConfig:{},latestEdgeConfigFetch:null,openTabId:null,currentRoute:u.Hidden,currentParams:{},workflowId:null,insertAfterStepIndex:null,contentBlocks:[],side:d.Left,initialUrl:null,isAddStepsMode:!1,latestAnnouncement:null,latestAnnouncementCheck:null,featureFlags:{},highlightedStepId:null,bgWorkflows:{},bgWorkflowsWithStepUrl:{},bgWorkflowLatestAttempt:null,bgAppListCache:{},bgWorkspacesCache:{},workspaceUsers:[],isGuidanceFinished:!1,shouldTrackCapture:!1,recentSearches:[],isForceInstalled:!1,hiddenThreads:[]};let k={current:null},T={current:null},W={id:0};const C={tokenTabId:null,ssoSignInTabId:null},A=t=>(Object.assign(a,t),chrome.storage.local.set(t)),F=async()=>{const t=await chrome.storage.local.get(Object.keys(a));Object.assign(a,t)};async function j(){try{const[t]=await chrome.tabs.query({active:!0,lastFocusedWindow:!0});if(t)return t}catch(t){r(`Error getting active tab: ${t.message}`)}}async function v(t){try{const e=await chrome.tabs.update(t,{active:!0});chrome.windows.update(e.windowId,{focused:!0})}catch(e){e instanceof Error&&!e.message.includes("No tab with id")&&r(e)}}const U=t=>chrome.tabs.query({url:[`${h(t)}*`,`${g.webUrl}${f}*${t.replace(/-/g,"")}*`]});export{v as a,A as b,p as c,T as d,C as e,U as f,j as g,F as h,y as i,W as l,m as r,a as s,k as w};
//# sourceMappingURL=DaneALmD.js.map
