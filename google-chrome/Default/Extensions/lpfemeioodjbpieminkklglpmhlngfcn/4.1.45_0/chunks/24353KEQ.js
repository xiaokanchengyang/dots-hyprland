import{e as c,f as l}from"./EVSA3OY5.js";import{a}from"./C2E66DLF.js";var u=class extends l{constructor(e,n,t){if(arguments.length===1&&typeof e=="object"&&!("saveContext"in e)){let{memory:r,callbackManager:i,...s}=e;super({...s,callbacks:i!=null?i:s.callbacks}),this.memory=r}else super({verbose:n,callbacks:t}),this.memory=e}serialize(){throw new Error("Method not implemented.")}async run(e,n){if(!(this.inputKeys.length<=1))throw new Error(`Chain ${this._chainType()} expects multiple inputs, cannot use 'run' `);let r=this.inputKeys.length?{[this.inputKeys[0]]:e}:{},i=await this.call(r,n),s=Object.keys(i);if(s.length===1)return i[s[0]];throw new Error("return values have multiple keys, `run` only supported when one key currently")}async call(e,n){let t={...e};if(this.memory!=null){let o=await this.memory.loadMemoryVariables(e);for(let[h,m]of Object.entries(o))t[h]=m}let r=await c.configure(n,this.callbacks,{verbose:this.verbose}),i=await(r==null?void 0:r.handleChainStart({name:this._chainType()},t)),s;try{s=await this._call(t,i)}catch(o){throw await(i==null?void 0:i.handleChainError(o)),o}return this.memory!=null&&await this.memory.saveContext(e,s),await(i==null?void 0:i.handleChainEnd(s)),Object.defineProperty(s,a,{value:i?{runId:i==null?void 0:i.runId}:void 0,configurable:!0}),s}async apply(e,n){return Promise.all(e.map(async(t,r)=>this.call(t,n==null?void 0:n[r])))}static async deserialize(e,n={}){switch(e._type){case"llm_chain":{let{LLMChain:t}=await import("./SVAGCAB5.js");return t.deserialize(e)}case"sequential_chain":{let{SequentialChain:t}=await import("./LDWJDTYE.js");return t.deserialize(e)}case"simple_sequential_chain":{let{SimpleSequentialChain:t}=await import("./LDWJDTYE.js");return t.deserialize(e)}case"stuff_documents_chain":{let{StuffDocumentsChain:t}=await import("./G7GUASVH.js");return t.deserialize(e)}case"map_reduce_documents_chain":{let{MapReduceDocumentsChain:t}=await import("./G7GUASVH.js");return t.deserialize(e)}case"refine_documents_chain":{let{RefineDocumentsChain:t}=await import("./G7GUASVH.js");return t.deserialize(e)}case"vector_db_qa":{let{VectorDBQAChain:t}=await import("./URD6ZG3J.js");return t.deserialize(e,n)}default:throw new Error(`Invalid prompt type in config: ${e._type}`)}}};export{u as a};
